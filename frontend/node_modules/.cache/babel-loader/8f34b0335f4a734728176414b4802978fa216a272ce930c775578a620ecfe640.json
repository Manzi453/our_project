{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\Ivan_codes\\\\Agriconnect_Tech4Change\\\\frontend\\\\src\\\\MembershipPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MembershipPage() {\n  _s();\n  const navigate = useNavigate();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [location, setLocation] = useState('');\n  const [cropTypes, setCropTypes] = useState('');\n  const [yearsOfExperience, setYearsOfExperience] = useState('');\n  const [motivation, setMotivation] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Membership form submitted with:', {\n      fullName,\n      email,\n      password,\n      phoneNumber,\n      location,\n      cropTypes,\n      yearsOfExperience,\n      motivation\n    });\n    // In a real application, you would send this data to your backend API for membership request.\n    // fetch('/api/membership-request', { ... });\n    alert('Membership request submitted!');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Membership Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"text\",\n          placeholder: \"Full Name\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"tel\",\n          placeholder: \"Phone Number\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"text\",\n          placeholder: \"Location (City/Region)\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"text\",\n          placeholder: \"Crop Types (e.g., Maize, Beans)\",\n          value: cropTypes,\n          onChange: e => setCropTypes(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"number\",\n          placeholder: \"Years of Experience\",\n          value: yearsOfExperience,\n          onChange: e => setYearsOfExperience(e.target.value),\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-field\",\n          placeholder: \"Motivation (Why do you want to join?)\",\n          value: motivation,\n          onChange: e => setMotivation(e.target.value),\n          rows: \"4\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Request Membership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(MembershipPage, \"vFt2x0M/qhrvKsdlBot3qqUe/d8=\", false, function () {\n  return [useNavigate];\n});\n_c = MembershipPage;\nexport default MembershipPage;\nvar _c;\n$RefreshReg$(_c, \"MembershipPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","MembershipPage","_s","navigate","fullName","setFullName","email","setEmail","password","setPassword","phoneNumber","setPhoneNumber","location","setLocation","cropTypes","setCropTypes","yearsOfExperience","setYearsOfExperience","motivation","setMotivation","handleSubmit","e","preventDefault","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","min","rows","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/Ivan_codes/Agriconnect_Tech4Change/frontend/src/MembershipPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction MembershipPage() {\r\n  const navigate = useNavigate();\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [cropTypes, setCropTypes] = useState('');\r\n  const [yearsOfExperience, setYearsOfExperience] = useState('');\r\n  const [motivation, setMotivation] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Membership form submitted with:', {\r\n      fullName,\r\n      email,\r\n      password,\r\n      phoneNumber,\r\n      location,\r\n      cropTypes,\r\n      yearsOfExperience,\r\n      motivation,\r\n    });\r\n    // In a real application, you would send this data to your backend API for membership request.\r\n    // fetch('/api/membership-request', { ... });\r\n    alert('Membership request submitted!');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-background\">\r\n      <div className=\"form-container\">\r\n        <h1>Membership Form</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"tel\"\r\n            placeholder=\"Phone Number\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            placeholder=\"Location (City/Region)\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            placeholder=\"Crop Types (e.g., Maize, Beans)\"\r\n            value={cropTypes}\r\n            onChange={(e) => setCropTypes(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"number\"\r\n            placeholder=\"Years of Experience\"\r\n            value={yearsOfExperience}\r\n            onChange={(e) => setYearsOfExperience(e.target.value)}\r\n            min=\"0\"\r\n            required\r\n          />\r\n          <textarea\r\n            className=\"input-field\"\r\n            placeholder=\"Motivation (Why do you want to join?)\"\r\n            value={motivation}\r\n            onChange={(e) => setMotivation(e.target.value)}\r\n            rows=\"4\"\r\n            required\r\n          ></textarea>\r\n          <button type=\"submit\" className=\"btn\">Request Membership</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MembershipPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}